<!DOCTYPE html>
<html>
<head>
  <script>

    /*
      ref: https://www.futuhk.com/commissionnew?lang=zh-hk

      類型|費用|收費方 
      佣金|每股0.0049 美元，每筆訂單最低0.99美元|富途證券 (Commission)
      固定式平台使用費|每股0.005美元，每筆訂單最低1美元|富途證券 (Fixed platform fees)
      階梯式平台使用費（每月交易股數）|每股（每筆訂單最低1美元）|富途證券 (Tiered platorm fees)
        第1-500股|0.0100美元
        第501-1,000股|0.0080美元
        第1,001-5,000股|0.0070美元
        第5,001-10,000股|0.0060美元
        第10,001-50,000股|0.0055美元
        第50,001-200,000股|0.0050美元
        第200,001-500,000股|0.0045美元
        第500,001-1,000,000股|0.0040美元
        第1,000,001-5,000,000股|0.0035美元
        第5,000,001股以上|0.0030美元
      交收費|0.003美元*成交股數|美國結算機構等 (Settlement fees)
      證監會規費|0.000008*交易金額，每次成交最低0.01 美元（僅賣出收取）|美國證監會 (SEC fees)
      交易活動費|0.000166 美元*賣出股數，每次成交最低0.01 美元，最高8.30 美元（僅賣出收取）|美國金融業監管局 (Trading Activity fees)
      
    */
    var price, qty, bidSize, consideration, buyTotalAmount, sellTotalAmount, el_containerDiv;

    function init() {
      setupForm();
    }


    function setupForm() {
      const form = document.createElement('form');
      form.onsubmit = main; // Call main() on form submission

      const priceLabel = document.createElement('label');
      priceLabel.textContent = 'Price: ';
      const priceInput = document.createElement('input');
      priceInput.setAttribute('id', 'price');
      priceInput.setAttribute('type', 'number');
      priceInput.setAttribute('name', 'price');
      priceInput.setAttribute('step', 'any');
      priceInput.setAttribute('onclick', "clearField(this)");
      priceInput.setAttribute('required', "");
      priceLabel.appendChild(priceInput);

      const qtyLabel = document.createElement('label');
      qtyLabel.textContent = 'Qty: ';
      const qtyInput = document.createElement('input');
      qtyInput.setAttribute('id', 'qty');
      qtyInput.setAttribute('type', 'number');
      qtyInput.setAttribute('name', 'qty');
      qtyInput.setAttribute('onclick', "clearField(this)");
      qtyInput.setAttribute('required', "");
      qtyLabel.appendChild(qtyInput);

      const bidsizeLabel = document.createElement('label');
      bidsizeLabel.textContent = 'BidSize: ';
      const bidsizeInput = document.createElement('input');
      bidsizeInput.setAttribute('id', 'bidsize');
      bidsizeInput.setAttribute('type', 'number');
      bidsizeInput.setAttribute('step', 'any');
      bidsizeInput.setAttribute('name', 'bidsize');
      bidsizeInput.setAttribute('onclick', "clearField(this)");
      bidsizeInput.setAttribute('required', "");
      bidsizeLabel.appendChild(bidsizeInput);
      bidsizeInput.setAttribute("value", "0.01");
      
      const submitButton = document.createElement('input');
      submitButton.setAttribute('type', 'submit');
      submitButton.setAttribute('value', 'Submit');

      form.appendChild(priceLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      form.appendChild(qtyLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      form.appendChild(bidsizeLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      form.appendChild(submitButton);
      
      form.appendChild(document.createElement('br'));

      document.body.appendChild(form);
      priceInput.focus();

    }
  
        
    function setTable() {
      // Clear the previous table, if it exists
      var previousTable = document.getElementById("mainTable");
      if (previousTable) {
        previousTable.remove();
      }

      var previousBottomSection = document.getElementById("bottom-section");
      if (previousBottomSection) {
        previousBottomSection.remove();
      }

      var el_bottomDiv = document.createElement("div");
      el_bottomDiv.id = "bottom-section";
      el_bottomDiv.classList.add("bottom-section");

      var tHeader = ["","Price", "Qty", "G/L HKD", "BidSize", "Consideration","Commission", "Platform",
              "Settlement",	"SEC",	"Trading", " OtherTotal", "TotalAmount", "GainLoss(%)"]; 

      var sellId = ["s_title","s_Price", , "s_GL_HKD", "s_Qty", "s_BidSize", "s_Consideration", "s_Platform","s_Commission",	
                    "s_Settlement",	"s_SEC",	"s_Trading", "s_OtherTotal", "s_TotalAmount", "s_GainLoss"];

      var el_table = document.createElement("table");
      el_table.id = "mainTable";      
      el_table.classList.add("mainTable");
    
      var thead = document.createElement("thead");
      var tr = document.createElement("tr");      

      var consideration = price * qty;
      var otherFee = getOtherFee(price, qty, "buy")
      
      buyTotalAmount = consideration + otherFee.total;
      var tBody = [["Buy", 
                    fmtDecimal(price),
                    fmtNoDecimal(qty),
                    fmtDecimal(0),
                    fmtDecimal(bidSize),
                    fmtDecimal(consideration),
                    fmtDecimal(otherFee.commission), 
                    fmtDecimal(otherFee.platform), 
                    fmtDecimal(otherFee.settlement),                     
                    fmtDecimal(0),  //otherFee.sec
                    fmtDecimal(0),  //otherFee.trading
                    fmtDecimal(otherFee.total),
                    fmtDecimal(buyTotalAmount),
                    "0", ],
                   ];      
                   
      var maxRow = 500;
      var curBuyPrice = price;
      var curSellPrice = price + bidSize;
        
      // Create table heading cells
      for (var i = 0; i < tHeader.length; i++) {
        var th = document.createElement("th");
        th.textContent = tHeader[i];    // equal to td
        tr.appendChild(th);
      }
      thead.appendChild(tr);
      el_table.appendChild(thead);

      // table body - buy
      for (var i = 0; i < tBody.length; i++) {
        var row = document.createElement("tr");
        for (var j = 0; j < tBody[i].length; j++) {
          var el_td = document.createElement("td");
          if (i == 1) {
            el_td.setAttribute('id', sellId[j] );
          }

          el_td.textContent = tBody[i][j];
          el_td.style.textAlign = "right";
          row.appendChild(el_td);
        }
        el_table.appendChild(row);
      }
      
      // table body => sell
      for (var i = 0; i <= maxRow; i++) {
        consideration = curSellPrice * qty;
        otherFee = getOtherFee(price, qty, "sell")
        sellTotalAmount = consideration - otherFee.total;
        gl = sellTotalAmount - buyTotalAmount;
        glPcent = (curSellPrice - price) / price * 100;
        var tSellBody = ["Sell", 
                    fmtDecimal(curSellPrice),
                    fmtNoDecimal(qty),
                    fmtDecimal(gl * 7.7),
                    fmtDecimal(bidSize),
                    fmtDecimal(consideration),
                    fmtDecimal(otherFee.commission), 
                    fmtDecimal(otherFee.platform), 
                    fmtDecimal(otherFee.settlement), 
                    fmtDecimal(otherFee.sec),  
                    fmtDecimal(otherFee.trading), 
                    fmtDecimal(otherFee.total),
                    fmtDecimal(sellTotalAmount),
                    fmtDecimal(gl) + " (" + fmtDecimal(glPcent) + ")",
                   ];

                   var row = document.createElement("tr");
        for (var j = 0; j < tSellBody.length; j++) {        
        
          var el_td = document.createElement("td");
          var buyingCost = getCost(curBuyPrice, qty, "buy")
          var buyingCost = getCost(curSellPrice, qty, "sell");

          

          if (i == 1) {
            el_td.setAttribute('id', sellId[j] );
          }


          //el_td.textContent = tSellBody[i][j];
          el_td.textContent = tSellBody[j];
          el_td.style.textAlign = "right";
          row.appendChild(el_td);
        }
        el_table.appendChild(row);
        curSellPrice += bidSize; 
      }

      // Append the table to the document body
      el_bottomDiv.appendChild(el_table);
      document.body.appendChild(el_bottomDiv);      
    }

    
    function main() {
      // Prevent form submission
      event.preventDefault();

      // setupForm();

      price = document.getElementById("price").value;
      price = parseFloat(price);
      qty = document.getElementById("qty").value;
      qty = parseFloat(qty);      
      bidSize = document.getElementById("bidsize").value;
      bidSize = parseFloat(bidSize);
      
      consideration = price * qty;
      
      setTable(); 

    }


    function fmtDecimal(n) {
      return n.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }


    function fmtNoDecimal(n) {
      return n.toLocaleString();
    }


    function getBidSize(price) {
    // https://www.hkex.com.hk/-/media/HKEX-Market/Services/Rules-and-Forms-and-Fees/Rules/SEHK/Securities/Rules/Sch_02.pdf

        var bidSize = 0;
        if (price <= 0.25) {
          bidSize = 0.001;
        } else if (price <= 0.5) {
          bidSize = 0.01;
        } else if (price <= 10) {
          bidSize = 0.01;
        } else if (price <= 20) {
          bidSize = 0.01;
        } else if (price <= 100) {
          bidSize = 0.01;
        } else if (price <= 200) {
          bidSize = 0.01;
        } else if (price <= 500) {
          bidSize = 0.01;
        } else if (price <= 1000) {
          bidSize = 0.01;
        } else if (price <= 2000) {
          bidSize = 0.01;
        } else if (price <= 5000) {
          bidSize = 0.01;
        } else if (price <= 9995) {
          bidSize = 5;
        }
        
        return bidSize;
    }


    function getCost(price, qty, bs) {
      var consideration = price * qty;
      var otherFee = getOtherFee(price, qty, bs);
      if (bs == "buy"){                
        var total = consideration + otherFee.total;
      } else {
        var total = consideration - otherFee.total;
      }

      return total;
    }


    function getOtherFee(price, qty, bs) {
        // Rate
        var commission_rate = 0.0049    // $0.0049/Share, minimum $0.99/order
        var fixed_platform_rate = 0.005 // $0.005/Share, minimum $1/order
        var settlement_rate = 0.003;    // $0.003/Share
        var sec_rate = 0.000008         // $0.000008 * transaction amount, min $0.01/trade (sells only)
        var trading_rate = 0.000166;    // $0.000166/Share, min $0.01/trade, max $8.30/trade (sells only)
        var otherFee = {};

        // $0.0049/Share, minimum $0.99/order
        otherFee.commission = commission_rate * qty;
        if (otherFee.commission < 0.99) {
          otherFee.commission = 0.99; 
        }

        // fix platorm charge $0.005/Share, minimum $1/order
        otherFee.platform = qty * 0.005;
        if (otherFee.platform < 1) {
          otherFee.platform = 1; 
        }

        // $0.003/Share
        otherFee.settlement = settlement_rate * qty; 
        
        // $0.000008 * transaction amount, min $0.01/trade (sells only)
        otherFee.sec = sec_rate * price * qty;
        otherFee.sec = Math.ceil(otherFee.sec * 100) / 100;

        // $0.000166/Share, min $0.01/trade, max $8.30/trade (sells only)  
        otherFee.trading = trading_rate * qty; 
        if (otherFee.trading < 0.01) {
          otherFee.trading = 0.01;
        } else if (otherFee.trading > 8.3)  {
          otherFee.trading = 8.3;
        }        
        
        if ( bs == "buy" ){
          otherFee.total = otherFee.commission + otherFee.platform + otherFee.settlement; 
        } else {
          otherFee.total = otherFee.commission + otherFee.platform + otherFee.settlement + otherFee.sec + otherFee.trading; 
        }
        return otherFee;
    }    
    

    function setCursorFocus() {
      var inputField = document.getElementById("price");
      inputField.focus();
    }


    function handleKeyPress(event) {
      if (event.keyCode === 13) { // 13 is the key code for Enter
        event.preventDefault(); // Prevent the default form submission
        main();
      }
    }


    function clearField(inputField) {     
      inputField.value = '';
    }


  </script>


  <style>
  

    .top-section {
      height: 25vh; /* Adjust the height of the top section as needed */
      overflow: auto;
    }

    .bottom-section {
      height: 60vh; /* Adjust the height of the bottom section as needed */
      overflow: auto;
      
    }


    th:first-child {
      position: sticky;
      left: 5;
      background-color: grey;
      font-weight: bold;
      z-index: 0;
    }

    
    .table-container {
      top: 500;
      width: 100%;

      height: 100px;
      overflow: auto;
    }


    th,
    td {
      border: 1px solid black;
      padding: 8px;
      background-color: grey;      
    }

    th {
      position: sticky;
      top: 0;
      background-color: grey;
      
    }

    body {
      background-color: lightgray;
    }

  </style>
</head>
<body>
  <script>
    // Call the setupForm function when the web page loads
    window.addEventListener('load', init);
  </script>
  


</body>
</html>
