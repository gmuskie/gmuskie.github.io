<!DOCTYPE html>
<html>
<head>
  <script>

    /*
      ref: https://www.futuhk.com/commissionnew?lang=zh-hk     
      日股和ETF
      類型	      費用	                收費方
      佣金	     0.08%，最低80日元/筆	  富途證券
      平台使用費 180日元/筆	            富途證券
      交收費	   40日元/筆	            上游清結算機構等      
      
    */
    var price, qty, bidSize, consideration, buyTotalAmount, sellTotalAmount, el_containerDiv, xRate;

    const apiUrl = `https://open.er-api.com/v6/latest/JPY`; // Example API endpoint

    async function fetchExchangeRate() {
      const response = await fetch(apiUrl);
      const data = await response.json();

      // Assign the JPY to HKD rate to the variable xrate
      xRate = data.rates.HKD;
    }


    function init() {
      fetchExchangeRate();           
      setupForm();
    }


    function setupForm() {
      const form = document.createElement('form');

      form.onsubmit = main; // Call main() on form submission

      const priceLabel = document.createElement('label');
      priceLabel.textContent = 'Price: ';
      const priceInput = document.createElement('input');
      priceInput.setAttribute('id', 'price');
      priceInput.setAttribute('type', 'number');
      priceInput.setAttribute('name', 'price');
      priceInput.setAttribute('step', 'any');
      priceInput.setAttribute('onclick', "clearField(this)");
      priceInput.setAttribute('required', "");
      priceLabel.appendChild(priceInput);

      const qtyLabel = document.createElement('label');
      qtyLabel.textContent = 'Qty: ';
      const qtyInput = document.createElement('input');
      qtyInput.setAttribute('id', 'qty');
      qtyInput.setAttribute('type', 'number');
      qtyInput.setAttribute('name', 'qty');
      qtyInput.setAttribute('onclick', "clearField(this)");
      qtyInput.setAttribute('required', "");
      qtyLabel.appendChild(qtyInput);

      const bidsizeLabel = document.createElement('label');
      bidsizeLabel.textContent = 'BidSize: ';
      const bidsizeInput = document.createElement('input');
      bidsizeInput.setAttribute('id', 'bidsize');
      bidsizeInput.setAttribute('type', 'number');
      bidsizeInput.setAttribute('step', 'any');
      bidsizeInput.setAttribute('name', 'bidsize');
      bidsizeInput.setAttribute('onclick', "clearField(this)");
      bidsizeInput.setAttribute('required', "");
      bidsizeLabel.appendChild(bidsizeInput);
      bidsizeInput.setAttribute("value", "1");
      
      const xRateLabel = document.createElement('label');
      xRateLabel.textContent = 'xRate: ';
      const xRateInput = document.createElement('input');
      xRateInput.setAttribute('id', 'xRate');
      xRateInput.setAttribute('type', 'number');
      xRateInput.setAttribute('name', 'xRate');
      xRateInput.setAttribute('disabled', 'true');
      xRateLabel.appendChild(xRateInput);
      xRateInput.setAttribute("value", xRate);

      const submitButton = document.createElement('input');
      submitButton.setAttribute('type', 'submit');
      submitButton.setAttribute('value', 'Submit');


      form.appendChild(priceLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      form.appendChild(qtyLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      
      form.appendChild(bidsizeLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));
      
      form.appendChild(xRateLabel);
      form.appendChild(document.createElement('br'));
      form.appendChild(document.createElement('br'));

      form.appendChild(submitButton);
      
      form.appendChild(document.createElement('br'));

      document.body.appendChild(form);
    
      priceInput.focus();

    }
  
        
    function setTable() {
      // Clear the previous table, if it exists
      var previousTable = document.getElementById("mainTable");
      if (previousTable) {
        previousTable.remove();
      }

      var previousBottomSection = document.getElementById("bottom-section");
      if (previousBottomSection) {
        previousBottomSection.remove();
      }

      var el_bottomDiv = document.createElement("div");
      el_bottomDiv.id = "bottom-section";
      el_bottomDiv.classList.add("bottom-section");

      var tHeader = ["","Price", "Qty", "G/L HKD", "BidSize", "Consideration","Commission", "Platform",
              "Settlement",	"SEC",	"Trading", " OtherTotal", "TotalJPY=>HKD", "GainLoss(%)"]; 

      var sellId = ["s_title","s_Price", , "s_GL_HKD", "s_Qty", "s_BidSize", "s_Consideration", "s_Platform","s_Commission",	
                    "s_Settlement",	"s_SEC",	"s_Trading", "s_OtherTotal", "s_TotalAmount", "s_GainLoss"];

      var el_table = document.createElement("table");
      el_table.id = "mainTable";      
      el_table.classList.add("mainTable");
    
      var thead = document.createElement("thead");
      var tr = document.createElement("tr");      

      var consideration = price * qty;
      var otherFee = getOtherFee(price, qty, "buy")
      
      buyTotalAmount = consideration + otherFee.total;
      buyTotalAmountHKD = (consideration + otherFee.total) * xRate;

      var tBody = [["Buy", 
                    fmtDecimal(price),
                    fmtNoDecimal(qty),
                    fmtDecimal(0),
                    fmtNoDecimal(bidSize),
                    fmtNoDecimal(consideration),
                    fmtNoDecimal(otherFee.commission), 
                    fmtNoDecimal(otherFee.platform), 
                    fmtNoDecimal(otherFee.settlement),                     
                    fmtNoDecimal(0),  //otherFee.sec
                    fmtNoDecimal(0),  //otherFee.trading
                    fmtNoDecimal(otherFee.total),
                    fmtNoDecimal(buyTotalAmount) + " => " + fmtNoDecimal(buyTotalAmountHKD),
                    "0", ],
                   ];      
                   
      var maxRow = 500;
      var curBuyPrice = price;
      var curSellPrice = price + bidSize;
        
      // Create table heading cells
      for (var i = 0; i < tHeader.length; i++) {
        var th = document.createElement("th");
        th.textContent = tHeader[i];    // equal to td
        tr.appendChild(th);
      }
      thead.appendChild(tr);
      el_table.appendChild(thead);

      // table body - buy
      for (var i = 0; i < tBody.length; i++) {
        var row = document.createElement("tr");
        for (var j = 0; j < tBody[i].length; j++) {
          var el_td = document.createElement("td");
          if (i == 1) {
            el_td.setAttribute('id', sellId[j] );
          }

          el_td.textContent = tBody[i][j];
          el_td.style.textAlign = "right";
          row.appendChild(el_td);
        }
        el_table.appendChild(row);
      }
      
      // table body => sell
      // JPYtoHKD = 0.05
      JPYtoHKD = xRate;
      

      for (var i = 0; i <= maxRow; i++) {
        consideration = curSellPrice * qty;
        otherFee = getOtherFee(curSellPrice, qty, "sell");
        sellTotalAmount = consideration - otherFee.total;
        sellTotalAmountHKD = (consideration - otherFee.total) * xRate;
        gl = sellTotalAmount - buyTotalAmount;
        glPcent = (curSellPrice - price) / price * 100;
        var tSellBody = ["Sell", 
                    fmtDecimal(curSellPrice),
                    fmtNoDecimal(qty),
                    fmtDecimal(gl * JPYtoHKD),
                    fmtNoDecimal(bidSize),
                    fmtNoDecimal(consideration),
                    fmtNoDecimal(otherFee.commission), 
                     
                    fmtNoDecimal(otherFee.platform), 
                    fmtNoDecimal(otherFee.settlement), 
                    fmtDecimal(0),  
                    fmtDecimal(0), 
                    fmtNoDecimal(otherFee.total),
                    fmtNoDecimal(sellTotalAmount) + " => " + fmtNoDecimal(sellTotalAmountHKD) ,
                    fmtNoDecimal(gl) + " (" + fmtDecimal(glPcent) + ")",
                   ];

                   var row = document.createElement("tr");
        for (var j = 0; j < tSellBody.length; j++) {        
        
          var el_td = document.createElement("td");
          // var buyingCost = getCost(curBuyPrice, qty, "buy")
          // var buyingCost = getCost(curSellPrice, qty, "sell");

          

          if (i == 1) {
            el_td.setAttribute('id', sellId[j] );
          }


          //el_td.textContent = tSellBody[i][j];
          el_td.textContent = tSellBody[j];
          el_td.style.textAlign = "right";
          row.appendChild(el_td);
        }
        el_table.appendChild(row);
        curSellPrice += bidSize; 
      }

      // Append the table to the document body
      el_bottomDiv.appendChild(el_table);
      document.body.appendChild(el_bottomDiv);      
    }

    
    function main() {

      // Prevent form submission     
      event.preventDefault();

      document.getElementById("xRate").value = xRate;

      // setupForm();
      price = document.getElementById("price").value;
      price = parseFloat(price);
      qty = document.getElementById("qty").value;
      qty = parseFloat(qty);      
      bidSize = document.getElementById("bidsize").value;      
      bidSize = parseFloat(bidSize);      
      //bidSize = getBidSize(price);
      //alert(price);
      //alert(bidSize);
      //document.getElementById("bidSize").value = bidSize;
      
      consideration = price * qty;
      
      setTable(); 

    }


    function fmtDecimal(n) {
      return n.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }


    function fmtNoDecimal(n) {      
      return n.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 })
    }


    function getBidSize(price) {
      // https://www.jpx.co.jp/english/equities/trading/domestic/07.html


      // from "TOPIX500 Constituents"
      /*
      var bidSize = 0;
      if (price <= 1000) {
        bidSize = 0.1;
      } else if (price <= 3000) {
        bidSize = 0.5;
      } else if (price <= 10000) {
        bidSize = 1;      
      } else if (price <= 30000) {
        bidSize = 5;
      } else if (price <= 100000) {
        bidSize = 10;      
      } else if (price <= 300000) {
        bidSize = 50;
      } else if (price <= 1000000) {
        bidSize = 100;      
      } else if (price <= 3000000) {
        bidSize = 500;
      } else if (price <= 10000000) {
        bidSize = 1000;      
      } else if (price <= 30000000) {
        bidSize = 5000;
      } else if (price > 30000000) {
        bidSize = 10000;
      }
      */


      // from "Other Issue"
      var bidSize = 0;
      if (price <= 3000) {
        bidSize = 1;
      } else if (price <= 5000) {
        bidSize = 5;
      } else if (price <= 30000) {
        bidSize = 10;
      } else if (price <= 50000) {
        bidSize = 50;
      } else if (price <= 300000) {
        bidSize = 100;
      } else if (price <= 500000) {
        bidSize = 500;
      } else if (price <= 3000000) {
        bidSize = 1000;
      } else if (price <= 5000000) {
        bidSize = 5000;
      } else if (price <= 30000000) {
        bidSize = 10000;
      } else if (price <= 50000000) {
        bidSize = 50000;
      } else if (price > 50000000) {
        bidSize = 100000;
      }
      
      return bidSize;
    }


    function getCost(price, qty, bs) {
      var consideration = price * qty;
      var otherFee = getOtherFee(price, qty, bs);
      if (bs == "buy"){                
        var total = consideration + otherFee.total;
      } else {
        var total = consideration - otherFee.total;
      }

      return total;
    }


    function ceilToDecimalPlaces(num, decimalPlaces) {
        const factor = Math.pow(10, decimalPlaces); // Scale the number
        return Math.ceil(num * factor) / factor;   // Apply Math.ceil and scale back
    }


    function getOtherFee(price, qty, bs) {
        // bs => reserved
        // Rate
        var commission_rate = 0.0008;  // 0.08%, minimum $80/order
        var fixed_platform = 180;  // $180/order
        var settlement = 40;      // $40/order
        var otherFee = {};

        otherFee.platform =  fixed_platform;
        otherFee.settlement =  settlement;

        // 0.08%, minimum $80/order
        otherFee.commission = ceilToDecimalPlaces(commission_rate * (qty * price), 0);
        

        if (otherFee.commission < 80) {
          otherFee.commission = 80; 
        }

        otherFee.total = otherFee.commission + otherFee.platform + otherFee.settlement; 

        return otherFee;
    }    
    

    function setCursorFocus() {
      var inputField = document.getElementById("price");
      inputField.focus();
    }


    function handleKeyPress(event) {
      if (event.keyCode === 13) { // 13 is the key code for Enter
        event.preventDefault(); // Prevent the default form submission
        main();
      }
    }


    function clearField(inputField) {     
      inputField.value = '';
    }





  </script>


  <style>
  

    .top-section {
      height: 25vh; /* Adjust the height of the top section as needed */
      overflow: auto;
    }

    .bottom-section {
      height: 60vh; /* Adjust the height of the bottom section as needed */
      overflow: auto;
      
    }


    th:first-child {
      position: sticky;
      left: 5;
      background-color: grey;
      font-weight: bold;
      z-index: 0;
    }

    
    .table-container {
      top: 500;
      width: 100%;

      height: 100px;
      overflow: auto;
    }


    th,
    td {
      border: 1px solid black;
      padding: 8px;
      background-color: grey;      
    }

    th {
      position: sticky;
      top: 0;
      background-color: grey;
      
    }

    body {
      background-color: lightgray;
    }

  </style>
</head>
<body>
  <script>
    // Call the setupForm function when the web page loads
    window.addEventListener('load', init);
  </script>
  


</body>
</html>
